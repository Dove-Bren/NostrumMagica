package com.smanzana.nostrummagica.world.dungeon.room;

import java.util.LinkedList;
import java.util.List;

import com.google.common.collect.Lists;
import com.smanzana.nostrummagica.blocks.NostrumBlocks;
import com.smanzana.nostrummagica.blocks.NostrumSingleSpawner;
import com.smanzana.nostrummagica.world.dungeon.NostrumDungeon;
import com.smanzana.nostrummagica.world.dungeon.NostrumDungeon.DungeonExitPoint;

import net.minecraft.block.Blocks;
import net.minecraft.block.RedstoneWallTorchBlock;
import net.minecraft.block.VineBlock;
import net.minecraft.util.Direction;
import net.minecraft.util.math.BlockPos;

public class RoomGrandHallway extends StaticRoom {
	
	public RoomGrandHallway() {
		// end up providing the type of shrine!
		super(-7, -1, 0, 7, 9, 40,
				// Floor
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				// Layer 1
				"XXXXXXXCXXXXXXX",
				"X      C      X",
				"X      C      X",
				"X XXX  C  XXX X",
				"X)XXX  C  XXX2X",
				"X XXX  C  XXX X",
				"X      C      X",
				"X      C      X",
				"X      C      X",
				"X      C      X",
				"X      C      X",
				"X XXX  C  XXX X",
				"X XXX  C  XXX X",
				"X XXX  C  XXX X",
				"X      C      X",
				"X      C      X",
				"X      C      X",
				"X      C      X",
				"X      C      X",
				"X XXX  C  XXX X",
				"X XXX  C  XXX X",
				"X XXX  C  XXX X",
				"X      C      X",
				"X      C      X",
				"X      C      X",
				"X      C      X",
				"X      C      X",
				"X XXX  C  XXX X",
				"X XXX  C  XXX X",
				"X XXX  C  XXX X",
				"X  1   C      X",
				"X      C      X",
				"X      C      X",
				"X      C      X",
				"X      C      X",
				"X XXX  C  XXX X",
				"X XXX  C  XXX X",
				"X XXX  C  XXX X",
				"X      C      X",
				"X      C      X",
				"XXXXXXXCXXXXXXX",
				// Layer 2
				"XXXXXXX XXXXXXX",
				"X     D D     X",
				"X             X",
				"X XXX     XXX X",
				"X)XXXR   LXXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXXR   LXXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXXR   LXXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXXR   LXXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXXR   LXXX X",
				"X XXX     XXX X",
				"X             X",
				"X     U U     X",
				"XXXXXXX XXXXXXX",
				// Layer 3
				"XXXXXXXXXXXXXXX",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X)XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"XXXXXXXXXXXXXXX",
				// Layer 4
				"XXXXXXXXXXXXXXX",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X)XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"XXXXXXXXXXXXXXX",
				// Layer 5
				"XXXXXXXXXXXXXXX",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X   X     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"XXXXXXXXXXXXXXX",
				// Layer 6
				"XXXXXXXXXXXXXXX",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X   X     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"XXXXXXXXXXXXXXX",
				// Layer 7
				"XXXXXXXXXXXXXXX",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"XXXXXXXXXXXXXXX",
				// Layer 3
				"XXXXXXXXXXXXXXX",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"XXXXXXXXXXXXXXX",
				// Layer 3
				"XXXXXXXXXXXXXXX",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X             X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X XXX     XXX X",
				"X             X",
				"X             X",
				"XXXXXXXXXXXXXXX",
				// Layer 3
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				"XXXXXXXXXXXXXXX",
				'X', NostrumBlocks.dungeonBlock,
				')', new StaticBlockState(Blocks.VINE.getDefaultState().with(VineBlock.EAST, true)),
				'L', new StaticBlockState(Blocks.REDSTONE_WALL_TORCH.getDefaultState().with(RedstoneWallTorchBlock.FACING, Direction.WEST)),
				'R', new StaticBlockState(Blocks.REDSTONE_WALL_TORCH.getDefaultState().with(RedstoneWallTorchBlock.FACING, Direction.EAST)),
				'C', new StaticBlockState(Blocks.RED_CARPET),
				'1', new StaticBlockState(NostrumBlocks.singleSpawner.getState(NostrumSingleSpawner.Type.GOLEM_ENDER)),
				'2', new StaticBlockState(NostrumBlocks.singleSpawner.getState(NostrumSingleSpawner.Type.GOLEM_LIGHTNING)),
				' ', null);
	}

	@Override
	public int getNumExits() {
		return 1;
	}

	@Override
	public List<DungeonExitPoint> getExits(DungeonExitPoint start) {
		List<DungeonExitPoint> list = new LinkedList<>();
		
		BlockPos exit = new BlockPos(0, 0, 41);
		
		list.add(NostrumDungeon.asRotated(start, exit, Direction.NORTH));
		
		return list;
	}

	@Override
	public int getDifficulty() {
		return 4;
	}

	@Override
	public boolean hasEnemies() {
		return true;
	}

	@Override
	public boolean hasTraps() {
		return false;
	}

	@Override
	public boolean supportsDoor() {
		return false;
	}

	@Override
	public boolean supportsKey() {
		return false;
	}

	@Override
	public DungeonExitPoint getKeyLocation(DungeonExitPoint start) {
		return null;
	}

	@Override
	public List<DungeonExitPoint> getTreasureLocations(DungeonExitPoint start) {
		return Lists.newArrayList(NostrumDungeon.asRotated(start,
				new BlockPos(-4, 4, 4), Direction.WEST));
	}
}
